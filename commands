#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

case "$1" in
  help | gitclone:help)
    help_content_func () {
      declare desc="return help_content string"
      cat<<help_content
    gitclone, creates/updates app from remote git repo  
help_content
    }

    if [[ $1 = "gplive:help" ]] ; then
        echo -e 'Usage: dokku gitclone <app> <git-url>'
        echo ''
        echo 'Clones and builds remote repos into dokku app'
        echo ''
        echo 'Example:'
        echo ''
        echo '$ dokku gitclone nodeapp https://github.com/heroku/node-js-sample'
        echo ''
    else
        help_content_func
    fi
    ;;
  
  gitclone)
    gitclone_main_cmd() {
      [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
      [[ -z $3 ]] && echo "Please specify an app name and git url ie. dokku gitclone <app> <giturl>" && exit 1
      verify_app_name "$2"
      APP="$2"
      GITURL="$3"
      dokku_log_info1 "Creating $APP from $GITURL..."
      if [[ ! -d "$DOKKU_ROOT/$APP/.gitclone" ]]; then
        cd "$DOKKU_ROOT/$APP"
        git clone $GITURL .gitclone
        rsync -a "$DOKKU_ROOT/$APP/.gitclone/.git/" ./
        rm -rf $DOKKU_ROOT/$APP/.gitclone 
        dokku ps:rebuild $APP
      fi
    }
    gitclone_main_cmd "$@"
    ;;
  gitclone:key)
    gitclone_key_cmd() {
      dokku_log_info1 "Getting Deploy Key"
      [[ ! -f "$DOKKU_ROOT/.ssh/id_rsa.pub" ]] && echo "There is no deploy key, please re-install the gitclone plugin" && exit 1
      cat "$DOKKU_ROOT/.ssh/id_rsa.pub"
    }
    gitclone_key_cmd "$@"
    ;;
  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac