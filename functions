#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/ps/functions"

clone_main_cmd() {
  declare desc="creates/updates app from remote git repo"
  declare APP="$2" GITURL="$3" TAGNAME="${4:-master}"
  local cmd="$1"
  local APP_PATH=$DOKKU_ROOT/$APP
  local PRERECEIVE_HOOK="$APP_PATH/hooks/pre-receive"

  [[ -z $2 ]] && dokku_log_fail "Please specify an app to run the command on"
  [[ -z $3 ]] && dokku_log_fail "Please specify an app name and git url ie. dokku clone <app> <giturl>"
  [[ -d "$DOKKU_ROOT/$APP" ]] || dokku apps:create "$APP"

  if [[ ! -d "$DOKKU_ROOT/$APP/.clone" ]]; then
    cd "$DOKKU_ROOT/$APP"
    if [[ -z $TAGNAME ]]; then
      dokku_log_info1 "Creating $APP from $GITURL..."
      git clone "$GITURL" .clone
    else
      dokku_log_info1 "Creating $APP from $GITURL $TAGNAME"
      git clone -n -qq "$GITURL" .clone
      cd .clone
      git checkout -qq "$TAGNAME"
      cd ..
    fi
    rsync -a "$DOKKU_ROOT/$APP/.clone/.git/" ./
    rm -rf "$DOKKU_ROOT/$APP/.clone"

    git config --bool core.bare true

    cat > "$PRERECEIVE_HOOK" <<EOF
#!/usr/bin/env bash
set -e; set -o pipefail;

cat | DOKKU_ROOT="$DOKKU_ROOT" dokku git-hook $APP
EOF
    chmod +x "$PRERECEIVE_HOOK"

    ps_rebuild "$APP"
  fi
}

clone_key_cmd() {
  declare desc="outputs the dokku public deploy key"
  declare APP="$2" GITURL="$3"
  local cmd="$1"

  if [[ ! -f "$DOKKU_ROOT/.ssh/id_rsa.pub" ]]; then
    dokku_log_fail "There is no deploy key, please re-install the clone plugin"
  fi
  cat "$DOKKU_ROOT/.ssh/id_rsa.pub"
}

clone_allow_cmd() {
  declare desc="adds a domain to known_hosts"
  declare DOMAIN="$2" PORT="${3:-22}"
  local cmd="$1"

  [[ -z $2 ]] && dokku_log_fail "Please supply a git domain ie 'dokku clone:allow github.com'"

  ssh-keyscan -t rsa -p "$PORT" "$DOMAIN" >> "$DOKKU_ROOT/.ssh/known_hosts"
  dokku_log_info1 "$DOMAIN added to known hosts"
}
